syntax = "proto3";

package es.eriktorr.clothing;

import "scalapb/scalapb.proto";

option (scalapb.options) = {
  import: "es.eriktorr.clothing.given"
};

message Garment {
  int64 sku = 1;
  string category = 2;
  string model = 3;
  string size = 4;
  string color = 5;
  string price = 6 [(scalapb.field).type = "squants.market.Money"];
  string description = 7;
  repeated string images = 8;
  reserved 100 to 200;
}

message ClothingRequest {
  message Filter {
    message SearchTerm {
      enum Field {
        Category = 0;
        Model = 1;
        Size = 2;
        Color = 3;
      };

      Field field = 1;
      repeated string values = 2;
    }

    message PriceRange {
      string min = 1 [(scalapb.field).type = "squants.market.Money"];
      string max = 2 [(scalapb.field).type = "squants.market.Money"];
    }

    repeated SearchTerm search_terms = 1;
    PriceRange price_range = 2;
  }

  message Sort {
    enum Field {
      Price = 0;
    };

    enum Order {
      Ascending = 0;
      Descending = 1;
    };

    Field field = 1;
    Order order = 2;
  }

  optional Filter filter = 1;
  optional Sort sort = 2;
}

message ClothingReply {
  repeated Garment garments = 1;
}

service Clothing {
  rpc SendClothingStream (stream ClothingRequest) returns (stream ClothingReply) {}
}
